networks:
  mongo-sharding-repl:
    driver: bridge

services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - config-data:/data/db
    command:
      [
          "--configsvr",
          "--replSet",
          "config_server",
          "--bind_ip_all",
          "--port",
          "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s

  shard1-a:
    image: mongo:latest
    container_name: shard1-a
    restart: always
    ports:
      - "27018:27018"
    volumes:
      - shard1-a-data:/data/db
    command:
      [
          "--shardsvr",
          "--replSet",
          "shard1",
          "--bind_ip_all",
          "--port",
          "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s

  shard1-b:
    image: mongo:latest
    container_name: shard1-b
    restart: always
    ports:
      - "27028:27028"
    volumes:
      - shard1-b-data:/data/db
    command:
      [
          "--replSet",
          "shard1",
          "--bind_ip_all",
          "--port",
          "27028"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s

  shard2-a:
    image: mongo:latest
    container_name: shard2-a
    restart: always
    ports:
      - "27019:27019"
    volumes:
      - shard2-a-data:/data/db
    command:
      [
          "--shardsvr",
          "--replSet",
          "shard2",
          "--bind_ip_all",
          "--port",
          "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s

  shard2-b:
    image: mongo:latest
    container_name: shard2-b
    restart: always
    ports:
      - "27029:27029"
    volumes:
      - shard2-b-data:/data/db
    command:
      [
          "--replSet",
          "shard2",
          "--bind_ip_all",
          "--port",
          "27029"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    command:
      [
          "mongos",
          "--configdb",
          "config_server/configSrv:27017",
          "--bind_ip_all",
          "--port",
          "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s

  redis:
    image: redis:latest
    container_name: redis_data
    restart: always
    ports:
      - "6379:6379"

  pymongo_api:
    container_name: pymongo_api_task3
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis:6379"

volumes:
  config-data:
  shard1-a-data:
  shard1-b-data:
  shard2-a-data:
  shard2-b-data:
  redis_data:
